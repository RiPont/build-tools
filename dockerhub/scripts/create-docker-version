#!/bin/bash -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. "${SCRIPT_DIR}/../../utilities/shell-utils.sh"

# Generates a Dockerfile, and then creates an appropriate branch for Docker
# Hub autobuilds. Assumes the running account has necessary SSH permissions to
# push to that repository.


UPDATE_EDITION=
FORCE=
REPO=ssh://git@github.com/couchbase/docker
while getopts ":p:v:e:ufr:" opt; do
  case ${opt} in
    p)
      PRODUCT=${OPTARG}
      ;;
    v)
      VERSION=${OPTARG}
      ;;
    e)
      EDITION=${OPTARG}
      ;;
    u)
      UPDATE_EDITION=true
      ;;
    f)
      FORCE=-f
      ;;
    \?)
      usage
      ;;
    :)
      echo "${OPTARG} requires an argument"
      usage
      ;;
    r)
      echo "Setting repository to ${OPTARG} for testing"
      rm -rf docker
      REPO=${OPTARG}
      ;;
  esac
done

if [ -z "${PRODUCT}" -o -z "${VERSION}" -o -z "${EDITION}" ]; then
    usage
fi

# Utility script to create the Dockerfile
${SCRIPT_DIR}/generate-dockerfile \
    -p ${PRODUCT} -v ${VERSION} -e ${EDITION} -r ${REPO} ${FORCE}

cd docker
DOCKERFILE_DIR=${EDITION}/${PRODUCT}/${VERSION}

git add "${DOCKERFILE_DIR}"
if [ ! -z "${FORCE}" ]; then
    VERB="Force-recreating"
else
    VERB="Adding"
fi
# Only commit this change if it actually changed something
git diff-index --quiet HEAD || \
    git commit -m "${VERB} ${PRODUCT} ${EDITION} ${VERSION}"
git push origin HEAD:refs/heads/master

status "Checking Dockerhub autobuild branch"
cp -a "${DOCKERFILE_DIR}" ../branch
BRANCH=${PRODUCT}-${VERSION}-${EDITION}
if git ls-remote --heads --exit-code origin ${BRANCH}; then
    git checkout -b ${BRANCH} --track origin/${BRANCH}
    VERB=Updating
else
    git checkout --orphan ${BRANCH}
    git reset --hard
    VERB=Creating
fi
status "${VERB} Dockerhub autobuild branch"
rm -rf branch
mv ../branch .
git add branch
git commit --allow-empty -m "${VERB} branch ${BRANCH} for Docker Hub autobuild"
git push origin ${BRANCH}:refs/heads/${BRANCH}
if [ "${UPDATE_EDITION}" = "true" ]; then
    git push --force origin ${BRANCH}:refs/heads/${PRODUCT}-${EDITION}
    if [ "$EDITION" = "enterprise" ]; then
        git push --force origin ${BRANCH}:refs/heads/${PRODUCT}-latest
    fi
fi
git checkout master
status "Done!"
