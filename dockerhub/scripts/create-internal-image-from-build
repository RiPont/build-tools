#!/bin/bash

# This script produces docker CE+EE images from an arbitrary VERSION + BLD_NUM + ARCH
# and uploads to both `registry.gitlab.com/cb-vanilla/server:${VERSION}-${BLD_NUM}`
# and `build-docker.couchbase.com/couchbase/server-internal:${VERSION}-${BLD_NUM}`

set -xe

RELEASE_URL=http://latestbuilds.service.couchbase.com/builds/latestbuilds/couchbase-server/zz-versions/${VERSION}/${BLD_NUM}

git clone https://github.com/couchbase/docker

# 7.1.0+ dockerfiles are store under arch-specific dir
n=$(printf "7.1.0\n${VERSION}" | sort -V | head -n1)
if [[ "$n" == "7.1.0" ]]; then
  case ${ARCH} in
    "aarch64")
      FILENAME=couchbase-server-enterprise-${VERSION}-${BLD_NUM}-amzn2.aarch64.rpm
      IMAGENAME=${VERSION}-${BLD_NUM}-${ARCH}
      DOCKERFILEDIR=${VERSION}-staging/aarch64
      ;;
    *)
      FILENAME=couchbase-server-enterprise_${VERSION}-${BLD_NUM}-ubuntu20.04_amd64.deb
      IMAGENAME=${VERSION}-${BLD_NUM}
      DOCKERFILEDIR=${VERSION}-staging/x86_64
    ;;
  esac
else
  if [[ ${ARCH} == "aarch64" ]]; then
    echo "Version: ${VERSION}\n"
    echo "${ARCH} does not apply to version lower 7.1.0"
    echo "exiting..."
    exit
  else
    FILENAME=couchbase-server-enterprise_${VERSION}-${BLD_NUM}-ubuntu20.04_amd64.deb
    IMAGENAME=${VERSION}-${BLD_NUM}
    DOCKERFILEDIR=${VERSION}-staging
  fi
fi

# Install go
cbdep install -d golang golang 1.16.3
export PATH=$(pwd)/golang/go1.16.3/bin:${PATH}

# Create staging directories
for edition in enterprise community; do
  mkdir -p docker/${edition}/couchbase-server/${VERSION}-staging
done

# Run Dockerfile generator
pushd docker/generate/generator
go run generate.go \
  ${WORKSPACE}/docker
popd

sed -i'' -e "/CB_SHA256.*sha256sum/d" ${WORKSPACE}/docker/enterprise/couchbase-server/${DOCKERFILEDIR}/Dockerfile
sed -i'' -e "/CB_SHA256.*sha256sum/d" ${WORKSPACE}/docker/community/couchbase-server/${DOCKERFILEDIR}/Dockerfile

# Build EE image
docker build \
  --build-arg CB_RELEASE_URL=${RELEASE_URL} \
  --build-arg CB_PACKAGE=${FILENAME} \
  -t registry.gitlab.com/cb-vanilla/server:${IMAGENAME} \
  -t build-docker.couchbase.com/couchbase/server-internal:${IMAGENAME} \
  ${WORKSPACE}/docker/enterprise/couchbase-server/${DOCKERFILEDIR}

# Push EE image
docker push registry.gitlab.com/cb-vanilla/server:${IMAGENAME}
docker push build-docker.couchbase.com/couchbase/server-internal:${IMAGENAME}
docker rmi \
  registry.gitlab.com/cb-vanilla/server:${IMAGENAME} \
  build-docker.couchbase.com/couchbase/server-internal:${IMAGENAME}

# Build CE image
docker build \
  --build-arg CB_RELEASE_URL=${RELEASE_URL} \
  --build-arg CB_PACKAGE=${FILENAME} \
  -t registry.gitlab.com/cb-vanilla/server:community-${IMAGENAME} \
  -t build-docker.couchbase.com/couchbase/server-internal:community-${IMAGENAME} \
  ${WORKSPACE}/docker/community/couchbase-server/${DOCKERFILEDIR}

# Push CE image
docker push registry.gitlab.com/cb-vanilla/server:community-${IMAGENAME}
docker push build-docker.couchbase.com/couchbase/server-internal:community-${IMAGENAME}
docker rmi \
  registry.gitlab.com/cb-vanilla/server:community-${IMAGENAME} \
  build-docker.couchbase.com/couchbase/server-internal:community-${IMAGENAME}
