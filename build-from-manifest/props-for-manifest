#!/usr/bin/env python3

import argparse

from manifest_util import get_metadata_for_manifest

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-d", "--manifest-dir", type=str, required=True,
                        help="Path to local manifest repository")
    parser.add_argument("-b", "--bld-num", type=str, default="9999",
                        help="Build number to put into properties")
    parser.add_argument("-o", "--output-file", type=argparse.FileType('w'),
                        default="-",
                        help="File to output properties to (default: stdout)")
    parser.add_argument("manifest_file", type=str,
                        help="Specific manifest to show info about")
    args = parser.parse_args()

    details = get_metadata_for_manifest(args.manifest_dir, args.manifest_file)
    args.output_file.write(
        f'PRODUCT={details.get("product")}\n'
        f'RELEASE={details.get("release")}\n'
        f'VERSION={details.get("version")}\n'
        f'BLD_NUM={args.bld_num}\n'
        f'PROD_NAME={details.get("prod_name")}\n'
        f'PRODUCT_PATH={details.get("product_path")}\n'
        f'MANIFEST={args.manifest_file}\n'
        f'BUILD_JOB={details.get("build_job")}\n'
        f'PLATFORMS={" ".join(details.get("platforms", []))}\n'
        f'GO_VERSION={details.get("go_version", "")}\n'
        f'KEEP_GIT={details.get("keep_git", "false")}\n'
        f'TOY_BUILD=true\n'
    )
