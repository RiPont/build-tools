jira-oauth-token.py is used to generate an access token for jira.
By using this access token, you will be able to make rest api calls without using the basic username and password
auth method suggested in Atlassian doc.

The script is based on https://bitbucket.org/atlassianlabs/atlassian-oauth-examples/src/master/python/app.py
Currently generated access token is stored on mega under jenkinsdocker-ssh/build_jira.json

Pre-requisities:
  * Application link for oauth has been created on Jira.  It is very unlikely we need to do this.  But if we do, see HOW-TO-CREATE-OAUTH-CONSUMER below.
  * Copy jira.pem to this directory.  it can be found under jenkinsdocker-ssh on mega
  * Verify settings in jira.config have not changed.
  * Install python modules listed in requirements.txt

Steps:
  1. log into https://issues.couchbase.com as !!!"build-team"!!! instead of yourself on your browser
  2. Run ./jira-oauth-token.py
  3. You will be prompted "Go to the following link in your browser...Have you authorized me? (y/n)".
     Copy and paste the link on the browser to accept the access token generated by this script
  4. If everything goes well, the script will produce oauth_token & auth_token_secret


Notes:

HOW-TO-CREATE-OAUTH-CONSUMER:
1. Generate an RSA pub/priv key pair(jira.pub/jira.pem).  Replace existing jira.pem on jenkinsdocker-ssh on mega with this new private key.
2. Configure an Application Link for generic application, named "build-team-jira-access".  See latest reference doc on Atlassian site
   http://confluence.atlassian.com/display/JIRA/Configuring+Application+Links

3. Configure an "Incoming Authentication" for the newly created Application Link with the following details:
   Consumer key:          build-team-jira-access
   Consumer name:         build-team-jira-access
   Description:           OAuth Test Example
   Public key:            <paste the contents of jira.pub>
   Consumer callback URL: https://issues.couchbase.com/auth  (this might not be required)
